/* 최근 10년 간 논문의 키워드 수집 */
DROP TABLE SCOPUS_2017Y_KEYWORD CASCADE constraints PURGE;
CREATE TABLE  SCOPUS_2017Y_KEYWORD NOLOGGING AS
/* Index 키워드 수집 */
SELECT DISTINCT A.EID,  A.KEYWORD
FROM (
SELECT A.*
FROM (
  SELECT DISTINCT A.EID, UPPER(TRIM(REGEXP_REPLACE(A.KEYWORD,'(\(.*\))'))) AS KEYWORD
  FROM SCOPUS_2014_AUTHOR_KEYWORD A
  WHERE A.EID IN (
    SELECT B.EID
    FROM COLLECT_IK_AK_ID B
    WHERE B.AK_EID IS NOT NULL
  )
 ) A
 WHERE A.KEYWORD IS NOT NULL
) A;

create index idx_scopus_2017Y_k_eid on SCOPUS_2017Y_KEYWORD(eid);
create index idx_scopus_2017Y_k_kw on SCOPUS_2017Y_KEYWORD(KEYWORD);


-- 연도별-분야 키워드 통계를 추출 하기 위한 기본 데이터 수집 쿼리
DROP TABLE SCOPUS_2017Y_KEYWORD_BASE CASCADE constraints PURGE;
CREATE TABLE SCOPUS_2017Y_KEYWORD_BASE NOLOGGING AS
/*
	EID : 논문 EID
	L_ASJC_CODE : ASJC 대분야
	PUBLICATION_YEAR : 발행연도
	KEYWORD : 키워드
*/
SELECT A.EID, A.L_ASJC_CODE, A.PUBLICATION_YEAR, B.KEYWORD
FROM (
	SELECT DISTINCT A.EID, A.L_ASJC_CODE, A.PUBLICATION_YEAR
    FROM SCOPUS_2017_UNIQ_AFF_CT_EID A
) A
INNER JOIN SCOPUS_2017Y_KEYWORD B
ON A.EID = B.EID
WHERE B.KEYWORD IS NOT NULL;

CREATE INDEX IDX_SCOPUS_2017Y_KB_EID ON SCOPUS_2017Y_KEYWORD_BASE (EID);
CREATE INDEX IDX_SCOPUS_2017Y_KB_ASJC ON SCOPUS_2017Y_KEYWORD_BASE (L_ASJC_CODE);
CREATE INDEX IDX_SCOPUS_2017Y_KB_KW ON SCOPUS_2017Y_KEYWORD_BASE (KEYWORD);
CREATE INDEX IDX_SCOPUS_2017Y_KB_PY ON SCOPUS_2017Y_KEYWORD_BASE (PUBLICATION_YEAR);

-- 최근 10년 간 분야별 키워드 랭킹
DROP TABLE SCOPUS_2017Y_KEYWORD_RANKING CASCADE constraints PURGE;
CREATE TABLE SCOPUS_2017Y_KEYWORD_RANKING NOLOGGING AS

/*
	RANK() OVER (PARTITION BY A.L_ASJC_CODE ORDER BY DOC_CNT DESC) : 분야별 논문 건수가 많은 키워드에 대한 랭크
	KEYWORD : 키워드
	L_ASJC_CODE : ASJC 대분야
	DOC_CNT : 키워드
*/
SELECT RANK() OVER (PARTITION BY A.L_ASJC_CODE ORDER BY DOC_CNT DESC) AS RANKING, A.KEYWORD, A.L_ASJC_CODE, A.DOC_CNT
FROM (
    SELECT A.KEYWORD, A.L_ASJC_CODE, COUNT(DISTINCT A.EID) AS DOC_CNT
    FROM SCOPUS_2017Y_KEYWORD_BASE A
    WHERE A.L_ASJC_CODE IN ('1000', '1100',
        '1300', '1500',
        '1600', '1700',
        '1800', '1900',
        '2100', '2200',
        '2300', '2400',
        '2500', '2600',
        '2700', '2800',
        '3000', '3100',
        '3400', '3500'
    )
    GROUP BY A.KEYWORD, A.L_ASJC_CODE
) A;
CREATE INDEX IDX_SCOPUS_2017Y_KEY_R_RANKING ON SCOPUS_2017Y_KEYWORD_RANKING(RANKING);
CREATE INDEX IDX_SCOPUS_2017Y_KEY_R_KW ON SCOPUS_2017Y_KEYWORD_RANKING(KEYWORD);
CREATE INDEX IDX_SCOPUS_2017Y_KEY_R_ASJC ON SCOPUS_2017Y_KEYWORD_RANKING(L_ASJC_CODE);

-- 최근 5년 분야별 키워드 랭킹
DROP TABLE SCOPUS_2017Y_5Y_KEY_RANKING CASCADE constraints PURGE;
CREATE TABLE SCOPUS_2017Y_5Y_KEY_RANKING NOLOGGING AS

/*
	RANK() OVER (PARTITION BY A.L_ASJC_CODE ORDER BY DOC_CNT DESC) : 분야별 논문 건수가 많은 키워드에 대한 랭크
	KEYWORD : 키워드
	L_ASJC_CODE : ASJC 대분야
	DOC_CNT : 키워드
*/
SELECT RANK() OVER (PARTITION BY A.L_ASJC_CODE ORDER BY DOC_CNT DESC) AS RANKING, A.KEYWORD, A.L_ASJC_CODE, A.DOC_CNT
FROM (
    SELECT A.KEYWORD, A.L_ASJC_CODE, COUNT(DISTINCT A.EID) AS DOC_CNT
    FROM SCOPUS_2017Y_KEYWORD_BASE A
    WHERE A.L_ASJC_CODE IN ('1000', '1100',
        '1300', '1500',
        '1600', '1700',
        '1800', '1900',
        '2100', '2200',
        '2300', '2400',
        '2500', '2600',
        '2700', '2800',
        '3000', '3100',
        '3400', '3500'
    ) AND A.PUBLICATION_YEAR BETWEEN '2012' and '2016'
    GROUP BY A.KEYWORD, A.L_ASJC_CODE
) A;
CREATE INDEX IDX_SCOPUS_2017Y_KEY_5Y_R_RANK ON SCOPUS_2017Y_5Y_KEY_RANKING(RANKING);
CREATE INDEX IDX_SCOPUS_2017Y_KEY_5Y_R_KW ON SCOPUS_2017Y_5Y_KEY_RANKING(KEYWORD);
CREATE INDEX IDX_SCOPUS_2017Y_KEY_5Y_R_ASJC ON SCOPUS_2017Y_5Y_KEY_RANKING(L_ASJC_CODE);


-- 연도-분야별 키워드 통계
DROP TABLE SCOPUS_2017Y_KEYWORD_STATS CASCADE constraints PURGE;
CREATE TABLE SCOPUS_2017Y_KEYWORD_STATS NOLOGGING AS
/*
	RANKING : 분야별 키워드 랭킹
	KEYWORD : 키워드
	L_ASJC_CODE : ASJC 대분야
	PUBLICATION_YEAR : 발행 연도
	DOC_CNT : PByKeyByYear -> 연도별 키워드 논문 건수
*/
SELECT B.RANKING, A.KEYWORD, A.L_ASJC_CODE, A.PUBLICATION_YEAR, A.DOC_CNT
FROM (
    SELECT A.KEYWORD, A.L_ASJC_CODE, A.PUBLICATION_YEAR, COUNT(DISTINCT EID) AS DOC_CNT
    FROM SCOPUS_2017Y_KEYWORD_BASE A
    WHERE A.L_ASJC_CODE IN ('1000', '1100',
        '1300', '1500',
        '1600', '1700',
        '1800', '1900',
        '2100', '2200',
        '2300', '2400',
        '2500', '2600',
        '2700', '2800',
        '3000', '3100',
        '3400', '3500'
    ) AND
    GROUP BY A.KEYWORD, A.L_ASJC_CODE, A.PUBLICATION_YEAR
) A
INNER JOIN (
	/*
		분야별 1000위까지 순위의 키워드 추출
		RANKING : 분야별 키워드 랭킹
		KEYWORD : 키워드
		L_ASJC_CODE : ASJC 대분야
		PUBLICATION_YEAR : 발행 연도
		DOC_CNT : PByKeyByYear -> 연도별 키워드 논문 건수
	*/
    SELECT DISTINCT KEYWORD, L_ASJC_CODE
    FROM SCOPUS_2017Y_KEYWORD_RANKING
    WHERE RANKING <= 1000
    ORDER BY KEYWORD
) B
ON A.KEYWORD = B.KEYWORD AND A.L_ASJC_CODE = B.L_ASJC_CODE;

CREATE INDEX IDX_SCOPUS_2017Y_KEY_S_KW ON SCOPUS_2017Y_KEYWORD_STATS(KEYWORD);
CREATE INDEX IDX_SCOPUS_2017Y_KEY_S_ASJC ON SCOPUS_2017Y_KEYWORD_STATS(L_ASJC_CODE);
CREATE INDEX IDX_SCOPUS_2017Y_KEY_S_PY ON SCOPUS_2017Y_KEYWORD_STATS(PUBLICATION_YEAR);
CREATE INDEX IDX_SCOPUS_2017Y_KEY_S_RANK ON SCOPUS_2017Y_KEYWORD_STATS(RANKING);


-- 최근 5년 키워드 통계
DROP TABLE SCOPUS_2017Y_5Y_KEY_STATS CASCADE constraints PURGE;
CREATE TABLE SCOPUS_2017Y_5Y_KEY_STATS NOLOGGING AS
/*
	RANKING : 분야별 키워드 랭킹
	KEYWORD : 키워드
	L_ASJC_CODE : ASJC 대분야
	PUBLICATION_YEAR : 발행 연도
	DOC_CNT : PByKeyByYear -> 연도별 키워드 논문 건수
*/
SELECT B.RANKING, A.KEYWORD, A.L_ASJC_CODE, A.PUBLICATION_YEAR, A.DOC_CNT
FROM (
    SELECT A.KEYWORD, A.L_ASJC_CODE, A.PUBLICATION_YEAR, COUNT(DISTINCT EID) AS DOC_CNT
    FROM SCOPUS_2017Y_KEYWORD_BASE A
    WHERE A.L_ASJC_CODE IN ('1000', '1100',
        '1300', '1500',
        '1600', '1700',
        '1800', '1900',
        '2100', '2200',
        '2300', '2400',
        '2500', '2600',
        '2700', '2800',
        '3000', '3100',
        '3400', '3500'
    ) AND A.PUBLICATION_YEAR BETWEEN '2012' AND '2016'
    GROUP BY A.KEYWORD, A.L_ASJC_CODE, A.PUBLICATION_YEAR
) A
INNER JOIN (
	/*
		분야별 1000위까지 순위의 키워드 추출
		RANKING : 분야별 키워드 랭킹
		KEYWORD : 키워드
		L_ASJC_CODE : ASJC 대분야
		PUBLICATION_YEAR : 발행 연도
		DOC_CNT : PByKeyByYear -> 연도별 키워드 논문 건수
	*/
    SELECT DISTINCT KEYWORD, L_ASJC_CODE
    FROM SCOPUS_2017Y_5Y_KEY_RANKING
    WHERE RANKING <= 1000
    ORDER BY KEYWORD
) B
ON A.KEYWORD = B.KEYWORD AND A.L_ASJC_CODE = B.L_ASJC_CODE;

CREATE INDEX IDX_SCOPUS_2017Y_5Y_KEY_S_KW ON SCOPUS_2017Y_5Y_KEY_STATS(KEYWORD);
CREATE INDEX IDX_SCOPUS_2017Y_5Y_KEY_S_AC ON SCOPUS_2017Y_5Y_KEY_STATS(L_ASJC_CODE);
CREATE INDEX IDX_SCOPUS_2017Y_5Y_KEY_S_PY ON SCOPUS_2017Y_5Y_KEY_STATS(PUBLICATION_YEAR);
CREATE INDEX IDX_SCOPUS_2017Y_5Y_KEY_S_RNK ON SCOPUS_2017Y_5Y_KEY_STATS(RANKING);

-- 연도별 키워드 통계 (PbyKey)
DROP TABLE SCOPUS_2017Y_KEY_Y_STATS CASCADE constraints PURGE;
CREATE TABLE SCOPUS_2017Y_KEY_Y_STATS NOLOGGING AS
SELECT A.KEYWORD, A.PUBLICATION_YEAR, A.DOC_CNT
FROM (
	/*
		분야별 1000위까지 순위의 키워드 추출
		KEYWORD : 키워드
		PUBLICATION_YEAR : ASJC 대분야
		DOC_CNT : PByKey -> 연도별 키워드 논문 건수
	*/
    SELECT A.KEYWORD, A.PUBLICATION_YEAR, COUNT(DISTINCT EID) AS DOC_CNT
    FROM SCOPUS_2017Y_KEYWORD_BASE A
    WHERE A.L_ASJC_CODE IN ('1000', '1100',
        '1300', '1500',
        '1600', '1700',
        '1800', '1900',
        '2100', '2200',
        '2300', '2400',
        '2500', '2600',
        '2700', '2800',
        '3000', '3100',
        '3400', '3500'
    ) AND A.KEYWORD IN (
	      SELECT DISTINCT KEYWORD
	      FROM SCOPUS_2017Y_KEYWORD_RANKING
	      WHERE RANKING <= 1000
    ) 
    GROUP BY A.KEYWORD, A.PUBLICATION_YEAR
) A;

CREATE INDEX IDX_SCOPUS_2017Y_KEY_Y_S_KW ON SCOPUS_2017Y_KEY_Y_STATS(KEYWORD);
CREATE INDEX IDX_SCOPUS_2017Y_KEY_Y_S_PY ON SCOPUS_2017Y_KEY_Y_STATS(PUBLICATION_YEAR);

-- 최근 5년 연도별 키워드 통계
DROP TABLE SCOPUS_2017Y_KEY_5Y_STATS CASCADE constraints PURGE;
CREATE TABLE SCOPUS_2017Y_KEY_5Y_STATS NOLOGGING AS
SELECT A.KEYWORD, A.PUBLICATION_YEAR, A.DOC_CNT
FROM (
	/*
		분야별 1000위까지 순위의 키워드 추출
		KEYWORD : 키워드
		PUBLICATION_YEAR : ASJC 대분야
		DOC_CNT : PByKey -> 연도별 키워드 논문 건수
	*/
    SELECT A.KEYWORD, A.PUBLICATION_YEAR, COUNT(DISTINCT EID) AS DOC_CNT
    FROM SCOPUS_2017Y_KEYWORD_BASE A
    WHERE A.L_ASJC_CODE IN ('1000', '1100',
        '1300', '1500',
        '1600', '1700',
        '1800', '1900',
        '2100', '2200',
        '2300', '2400',
        '2500', '2600',
        '2700', '2800',
        '3000', '3100',
        '3400', '3500'
    ) AND A.KEYWORD IN (
	      SELECT DISTINCT KEYWORD
	      FROM SCOPUS_2017Y_5Y_KEY_RANKING
	      WHERE RANKING <= 1000
    ) AND A.PUBLICATION_YEAR BETWEEN '2012' AND '2016'
    GROUP BY A.KEYWORD, A.PUBLICATION_YEAR
) A;

CREATE INDEX IDX_SCOPUS_2017Y_KEY_5Y_S_KW ON SCOPUS_2017Y_KEY_5Y_STATS(KEYWORD);
CREATE INDEX IDX_SCOPUS_2017Y_KEY_5Y_S_PY ON SCOPUS_2017Y_KEY_5Y_STATS(PUBLICATION_YEAR);
