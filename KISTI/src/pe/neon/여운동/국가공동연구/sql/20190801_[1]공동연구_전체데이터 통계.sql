/**
데이터 전체에 대한 통계
각 국가별 논문 및 피인용 수 구하기.
*/

/*최근 5년간(2014-2018) 논문(article, proceeding, review)에서 발생하는 키워드들을 20개 과학기술분류의 하위분류(4자리코드)에 대해서 찾는다.*/
-- @coreawin 201908 작업 : 최근 5년간 논문 데이터 구축 ar, cp, re 2014-2018

DROP TABLE SCOPUS_2017_DOCUMENT CASCADE CONSTRAINTS PURGE; --과거 테이블  삭제

DROP TABLE NYEO2019_SCOPUS_DOCUMENT CASCADE CONSTRAINTS PURGE;

CREATE TABLE NYEO2019_SCOPUS_DOCUMENT nologging AS
    SELECT /*+ PARALLEL (4) */ EID, PUBLICATION_YEAR, TITLE, CITATION_TYPE, SOURCE_ID, DOI, CIT_COUNT, REF_COUNT
    FROM SCOPUS_2014_DOCUMENT
    WHERE PUBLICATION_YEAR BETWEEN '2014' AND '2018'
    AND CITATION_TYPE IN ('ar', 'cp', 're')
;
COMMENT ON TABLE SCOPUS.NYEO2019_SCOPUS_DOCUMENT IS '@coreawin 201908 작업 : 최근 5년간 논문 데이터 구축 ar, cp, re 2014-2018';
CREATE INDEX IDX_SUB_DOC_EID ON NYEO2019_SCOPUS_DOCUMENT (EID) nologging parallel 2;
CREATE INDEX IDX_SUB_DOC_PY ON NYEO2019_SCOPUS_DOCUMENT (PUBLICATION_YEAR) nologging parallel 2;
CREATE INDEX IDX_SUB_DOC_CT ON NYEO2019_SCOPUS_DOCUMENT (CITATION_TYPE) nologging parallel 2;
CREATE INDEX IDX_SUB_DOC_CC ON NYEO2019_SCOPUS_DOCUMENT (CIT_COUNT) nologging parallel 2;
CREATE INDEX IDX_SUB_RC ON NYEO2019_SCOPUS_DOCUMENT (REF_COUNT) nologging parallel 2;
CREATE INDEX IDX_SUB_DOI ON NYEO2019_SCOPUS_DOCUMENT (DOI) nologging parallel 2;

SELECT COUNT(eid) FROM NYEO2019_SCOPUS_DOCUMENT;

-- @coreawin 201908 작업 : 국가코드 및 기관정보를 수집한다.
DROP TABLE SCOPUS_2016_AFFIL_FULL CASCADE CONSTRAINTS PURGE; --과거 테이블 삭제
DROP TABLE NYEO2019_SCOPUS_AFFIL_FULL CASCADE CONSTRAINTS PURGE;
create table NYEO2019_SCOPUS_AFFIL_FULL nologging as
SELECT  /*+ PARALLEL (4) */  DISTINCT A.EID, NVL(B.AFID, A.AFID) AS AFID, NVL(B.AFFILIATION, A.AFFILIATION) AS AFFILIATION, NVL(B.COUNTRY_CODE, UPPER(NVL(A.COUNTRY_CODE, 'NONE'))) AS COUNTRY_CODE
FROM SCOPUS_2014_AFFILIATION A
LEFT OUTER JOIN SCOPUS_KISTI_AFFILIATION B
ON A.AFID = B.AFID;

COMMENT ON TABLE SCOPUS.NYEO2019_SCOPUS_AFFIL_FULL IS '@coreawin 201908 작업 : 국가코드 및 기관정보를 수집한다. 국가정보가 없는것은 NONE으로 처리한다.';
create index IDX_SCOPUS_2016_AFFIL_EID on NYEO2019_SCOPUS_AFFIL_FULL(EID) nologging;
create index IDX_SCOPUS_2016_AFFIL_AFID on NYEO2019_SCOPUS_AFFIL_FULL(AFID) nologging;
create index IDX_SCOPUS_2016_AFFIL_CT on NYEO2019_SCOPUS_AFFIL_FULL(COUNTRY_CODE) nologging;

/*
    @coreawin 201908 작업 : 최근 10년간의 논문 ID, 논문의 연도, 대분류, 국가 정보 수집 쿼리
    - 국가코드는 중복을 포함하여 수집
	- 논문의 Fractional Count 방식의 피인용수와 논문건수를 계산할떄 실제 논문의 국가의 총건수, 논문의 국가별 건수 수집을 위해 사용.
*/
DROP TABLE SCOPUS_2017_AFF_CT_EID CASCADE CONSTRAINTS PURGE;  --과거 테이블 삭제
DROP TABLE NYEO2019_SCOPUS_AFF_CT_EID CASCADE CONSTRAINTS PURGE;
CREATE TABLE NYEO2019_SCOPUS_AFF_CT_EID NOLOGGING AS
SELECT /*+ PARALLEL (4) */  DOC_INFO.EID, DOC_INFO.PUBLICATION_YEAR, LARGE_ASJC.L_ASJC_CODE, DECODE(NVL(AFF_INFO.COUNTRY_CODE, 'NONE'), '.', 'NONE', NVL(AFF_INFO.COUNTRY_CODE, 'NONE')) AS COUNTRY_CODE
FROM NYEO2019_SCOPUS_DOCUMENT DOC_INFO
LEFT OUTER JOIN(
	SELECT EID, COUNTRY_CODE
	FROM NYEO2019_SCOPUS_AFFIL_FULL
) AFF_INFO
ON DOC_INFO.EID = AFF_INFO.EID
LEFT OUTER JOIN (
  SELECT DISTINCT EID, DECODE(ASJC_CODE, NULL, 'NONE',(SUBSTR(ASJC_CODE,1,2) ||'00')) AS L_ASJC_CODE
  FROM SCOPUS_2014_CLASS_ASJC
) LARGE_ASJC
ON DOC_INFO.EID = LARGE_ASJC.EID;

COMMENT ON TABLE NYEO2019_SCOPUS_AFF_CT_EID IS '@coreawin 201908 작업 : 논문 ID, 논문의 연도, 대분류, 국가 정보 수집 쿼리. 국가코드 중복 허용 수집, 논문의 Fractional Count 방식의 피인용수와 논문건수를 계산할떄 실제 논문의 국가의 총건수, 논문의 국가별 건수 수집을 위해 사용.';
COMMENT ON COLUMN NYEO2019_SCOPUS_AFF_CT_EID.EID IS '문헌 EID';
COMMENT ON COLUMN NYEO2019_SCOPUS_AFF_CT_EID.PUBLICATION_YEAR IS '발행연도';
COMMENT ON COLUMN NYEO2019_SCOPUS_AFF_CT_EID.L_ASJC_CODE IS 'ASJC 대분류 코드';
COMMENT ON COLUMN NYEO2019_SCOPUS_AFF_CT_EID.COUNTRY_CODE IS '국가코드';

CREATE INDEX IDX_SCOPUS_AFFCT_CT ON NYEO2019_SCOPUS_AFF_CT_EID(COUNTRY_CODE) NOLOGGING parallel 2;
CREATE INDEX IDX_SCOPUS_AFFCT_EID ON NYEO2019_SCOPUS_AFF_CT_EID(EID) NOLOGGING parallel 2;
CREATE INDEX IDX_SCOPUS_AFFCT_YEAR ON NYEO2019_SCOPUS_AFF_CT_EID(PUBLICATION_YEAR) NOLOGGING parallel 2;
CREATE INDEX IDX_SCOPUS_AFFCT_LASJC ON NYEO2019_SCOPUS_AFF_CT_EID(L_ASJC_CODE) NOLOGGING parallel 2;



/*
  @coreawin 201908 작업 : 논문 ID, 논문의 연도, 대분류, 분류,  국가 정보, 피인용 수 수집
    - SCOPUS 기관의 국가정보 수집시 논문 1건의 기관의 국가정보의 중복을 베제하고 수집.
*/
DROP TABLE SCOPUS_2017_UNIQ_AFF_CT_EID CASCADE CONSTRAINTS PURGE;  --과거 테이블 삭제
DROP TABLE NYEO2019_SCOPUS_UNIQ_CT_EID CASCADE CONSTRAINTS PURGE;
CREATE TABLE NYEO2019_SCOPUS_UNIQ_CT_EID NOLOGGING AS
SELECT /*+ PARALLEL (4) */  DOC_INFO.EID, DOC_INFO.PUBLICATION_YEAR, LARGE_ASJC.L_ASJC_CODE, LARGE_ASJC.ASJC_CODE, DECODE(NVL(AFF_INFO.COUNTRY_CODE, 'NONE'), '.', 'NONE', NVL(AFF_INFO.COUNTRY_CODE, 'NONE')) AS COUNTRY_CODE, DOC_INFO.CIT_COUNT
FROM NYEO2019_SCOPUS_DOCUMENT DOC_INFO
LEFT OUTER JOIN(
	SELECT DISTINCT EID, COUNTRY_CODE
	FROM NYEO2019_SCOPUS_AFFIL_FULL
) AFF_INFO
ON DOC_INFO.EID = AFF_INFO.EID
LEFT OUTER JOIN (
  SELECT DISTINCT EID, DECODE(ASJC_CODE, NULL, 'NONE',(SUBSTR(ASJC_CODE,1,2) ||'00')) AS L_ASJC_CODE, ASJC_CODE
  FROM SCOPUS_2014_CLASS_ASJC
) LARGE_ASJC
ON DOC_INFO.EID = LARGE_ASJC.EID;

COMMENT ON TABLE NYEO2019_SCOPUS_UNIQ_CT_EID IS '@coreawin 201908 작업 : 논문 ID, 논문의 연도, 대분류, 분류, 국가 정보, 피인용 수 수집, SCOPUS 기관의 국가정보 수집시 논문 1건의 기관의 국가정보의 중복을 베제하고 수집.';
COMMENT ON COLUMN NYEO2019_SCOPUS_UNIQ_CT_EID.EID IS '문헌 EID';
COMMENT ON COLUMN NYEO2019_SCOPUS_UNIQ_CT_EID.PUBLICATION_YEAR IS '발행연도';
COMMENT ON COLUMN NYEO2019_SCOPUS_UNIQ_CT_EID.L_ASJC_CODE IS 'ASJC 대분류 코드';
COMMENT ON COLUMN NYEO2019_SCOPUS_UNIQ_CT_EID.ASJC_CODE IS 'ASJC 분류 코드';
COMMENT ON COLUMN NYEO2019_SCOPUS_UNIQ_CT_EID.COUNTRY_CODE IS '국가코드';
COMMENT ON COLUMN NYEO2019_SCOPUS_UNIQ_CT_EID.CIT_COUNT IS '피인용 수';

CREATE INDEX IDX_SCOPUS_UAFFCT_CT ON NYEO2019_SCOPUS_UNIQ_CT_EID(COUNTRY_CODE) NOLOGGING parallel 2;
CREATE INDEX IDX_SCOPUS_UAFFCT_EID ON NYEO2019_SCOPUS_UNIQ_CT_EID(EID) NOLOGGING parallel 2;
CREATE INDEX IDX_SCOPUS_UAFFCT_YEAR ON NYEO2019_SCOPUS_UNIQ_CT_EID(PUBLICATION_YEAR) NOLOGGING parallel 2;
CREATE INDEX IDX_SCOPUS_UAFFCT_CITCNT ON NYEO2019_SCOPUS_UNIQ_CT_EID(CIT_COUNT) NOLOGGING parallel 2;
CREATE INDEX IDX_SCOPUS_UAFFCT_LASJC ON NYEO2019_SCOPUS_UNIQ_CT_EID(L_ASJC_CODE) NOLOGGING parallel 2;



-- @coreawin 201908 작업 : 한국 논문에 대해서 Fractional count 방식을 적용한  총피인용수, 문헌수(1 / (지정 국가수 / 전체 국가수) 수집 테이블
-- E.G. 미국 2건, 한국 3건, 일본 5건 -> 미국 : 1 * (2/10)건, 한국 : 1 * (3/10)건, 일본 : 1 * (5/10)건
DROP TABLE SCOPUS_2017_AFF_CT_STAT_KOR CASCADE CONSTRAINTS PURGE;
DROP TABLE NYEO2019_SCOPUS_CT_STAT_ALL CASCADE CONSTRAINTS PURGE;
CREATE TABLE NYEO2019_SCOPUS_CT_STAT_ALL as
SELECT  /*+ PARALLEL (4) */  DISTINCT
	U.EID,
	U.PUBLICATION_YEAR,
    U.L_ASJC_CODE AS ASJC_CODE,
    U.COUNTRY_CODE,
    (1 * (F_CT_CNT.COUNTRY_CNT / F_CT_CNT.COUNRY_TOTAL_CNT)) AS DOC_CNT,
    (U.CIT_COUNT * (F_CT_CNT.COUNTRY_CNT / F_CT_CNT.COUNRY_TOTAL_CNT)) AS CIT_CNT
FROM NYEO2019_SCOPUS_UNIQ_CT_EID U
INNER JOIN (
    SELECT STATS.EID, STATS.PUBLICATION_YEAR, STATS.L_ASJC_CODE AS ASJC_CODE, STATS.COUNTRY_CODE, STATS.COUNRY_TOTAL_CNT, COUNT (STATS.COUNTRY_CODE) AS COUNTRY_CNT
    FROM (
        SELECT COUNTRY_STATS.EID, COUNTRY_STATS.PUBLICATION_YEAR, COUNTRY_STATS.L_ASJC_CODE, COUNTRY_STATS.COUNTRY_CODE, S_STATS.CT_CNT AS COUNRY_TOTAL_CNT
        FROM  NYEO2019_SCOPUS_AFF_CT_EID COUNTRY_STATS
        INNER JOIN (
			SELECT SK.EID, SK.PUBLICATION_YEAR, SK.L_ASJC_CODE AS ASJC_CODE, COUNT(SK.COUNTRY_CODE) AS CT_CNT
            FROM NYEO2019_SCOPUS_AFF_CT_EID SK
            GROUP BY SK.EID, SK.PUBLICATION_YEAR, SK.L_ASJC_CODE
        ) S_STATS
        ON 	S_STATS.EID = COUNTRY_STATS.EID
        AND S_STATS.PUBLICATION_YEAR = COUNTRY_STATS.PUBLICATION_YEAR
        AND S_STATS.ASJC_CODE = COUNTRY_STATS.L_ASJC_CODE
    ) STATS
    GROUP BY STATS.EID, STATS.PUBLICATION_YEAR, STATS.L_ASJC_CODE, STATS.COUNTRY_CODE, STATS.COUNRY_TOTAL_CNT
) F_CT_CNT
ON U.EID = F_CT_CNT.EID
AND U.PUBLICATION_YEAR = F_CT_CNT.PUBLICATION_YEAR
AND U.L_ASJC_CODE = F_CT_CNT.ASJC_CODE
AND U.COUNTRY_CODE = F_CT_CNT.COUNTRY_CODE
--WHERE U.COUNTRY_CODE = 'KOR';

COMMENT ON TABLE NYEO2019_SCOPUS_CT_STAT_ALL IS '@coreawin 201908 작업 : 한국 논문에 대해서 Fractional count 방식을 적용한  총피인용수, 문헌수(1 / (지정 국가수 / 전체 국가수) 수집 테이블,  E.G. 미국 2건, 한국 3건, 일본 5건 -> 미국 : 1 * (2/10)건, 한국 : 1 * (3/10)건, 일본 : 1 * (5/10)건 ';
COMMENT ON COLUMN NYEO2019_SCOPUS_CT_STAT_ALL.EID IS '문헌 EID';
COMMENT ON COLUMN NYEO2019_SCOPUS_CT_STAT_ALL.PUBLICATION_YEAR IS '발행연도';
COMMENT ON COLUMN NYEO2019_SCOPUS_CT_STAT_ALL.ASJC_CODE IS 'ASJC 분류 코드';
COMMENT ON COLUMN NYEO2019_SCOPUS_CT_STAT_ALL.COUNTRY_CODE IS '국가코드';
COMMENT ON COLUMN NYEO2019_SCOPUS_CT_STAT_ALL.DOC_CNT IS '문헌 수 (국가별 Fractional count 방식을 적용)';
COMMENT ON COLUMN NYEO2019_SCOPUS_CT_STAT_ALL.CIT_CNT IS '피인용 수 (국가별 Fractional count 방식을 적용)';

CREATE INDEX IDX_SCOPUS_AFCT_STAT_K_EID ON NYEO2019_SCOPUS_CT_STAT_ALL(EID) NOLOGGING parallel 2;
CREATE INDEX IDX_SCOPUS_AFCT_STAT_K_YEAR ON NYEO2019_SCOPUS_CT_STAT_ALL(PUBLICATION_YEAR) NOLOGGING parallel 2;
CREATE INDEX IDX_SCOPUS_AFCT_STAT_K_CITCNT ON NYEO2019_SCOPUS_CT_STAT_ALL(CIT_CNT) NOLOGGING parallel 2;
CREATE INDEX IDX_SCOPUS_AFCT_STAT_K_CT ON NYEO2019_SCOPUS_CT_STAT_ALL(COUNTRY_CODE) NOLOGGING parallel 2;
CREATE INDEX IDX_SCOPUS_AFCT_STAT_K_DCNT ON NYEO2019_SCOPUS_CT_STAT_ALL(DOC_CNT) NOLOGGING parallel 2;
CREATE INDEX IDX_SCOPUS_AFCT_STAT_K_ASJC ON NYEO2019_SCOPUS_CT_STAT_ALL(ASJC_CODE) NOLOGGING parallel 2;






